{
  "name": "lyrata-electron-app",
  "version": "0.2.0",
  "description": "Пользователь, добавив свой текст, читает только выделенную часть текста и сам переносит выделение вперёд/назад нажатиями кнопок. Музыка, также изначально выбранная и настроенная пользователем, проигрывается частями с автоматическим их выбором под настроение выделенной части текста, тем самым повторяя атмосферу книги, а не перебивая её.",
  "private": true,
  "main": "build/electron.js",
  "dependencies": {
    "@testing-library/dom": "^10.4.1",
    "@testing-library/jest-dom": "^6.6.4",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^13.5.0",
    "@types/jest": "^27.5.2",
    "@types/node": "^16.18.126",
    "@types/react": "^19.1.8",
    "@types/react-dom": "^19.1.6",
    "dompurify": "^3.2.6",
    "marked": "^16.1.1",
    "react": "^19.1.0",
    "react-dom": "^19.1.0",
    "react-scripts": "5.0.1",
    "typescript": "^4.9.5",
    "web-vitals": "^2.1.4"
  },
  "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject",
    "electron-start": "electron .",
    "electron-dist": "electron-builder",
    "electron-pack": "electron-builder --dir"
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ],
    "rules": {
      "eqeqeq": ["error", "always"]
    }
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "author": "AlbionVisual",
  "license": "MIT",
  "devDependencies": {
    "electron": "^37.2.4",
    "electron-builder": "^26.0.12"
  },
  "build": {
    "appId": "com.albionvisual.lyrata",
    "productName": "Lyrata",
    "copyright": "Copyright © 2025 ${author}",
    "directories": {
      "output": "dist"
    },
    "files": [
      "**/*",
      "!node_modules/electron**"
    ],
    "win": {
      "target": [
        {
          "target": "nsis",
          "arch": [
            "x64",
            "ia32"
          ]
        }
      ],
      "icon": "build/icons/win/icon.ico"
    },
    "mac": {
      "target": "dmg",
      "icon": "build/icons/mac/icon.icns"
    },
    "linux": {
      "target": "AppImage",
      "icon": "build/icons/png"
    }
  }
}
